# .github/workflows/ci-cd.yml
name: CI/CD for Spring Boot and CodeDeploy

on:
  push:
    branches:
      - main  # 또는 master

jobs:
  build-and-upload:
    name: Build and Upload to S3
    runs-on: ubuntu-latest  # 실행 환경

    steps:
      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle 권한 부여 (Gradlew를 쓴다면)
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4. Gradle로 빌드 (./gradlew build)
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 5. CodeDeploy용 zip 파일 생성
      - name: Make zip file for CodeDeploy
        run: |
          mkdir deploy  # zip파일을 담을 임시 폴더
          cp appspec.yml deploy/
          cp build/libs/*.jar deploy/  # 빌드된 jar 파일 경로 확인!
          cp -r scripts/ deploy/      # scripts 폴더 통째로 복사
          
          cd deploy
          zip -r ../deploy.zip .
          cd ..

      # 6. AWS 자격 증명 설정
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ID }}
          aws-region: ap-northeast-2

      # 7. S3에 업로드
      - name: Upload to S3
        run: |
          aws s3 cp \
            ./deploy.zip \
            s3://asg--test/deploy.zip